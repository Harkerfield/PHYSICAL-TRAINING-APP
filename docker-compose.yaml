services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "${FRONTEND_SERVER_PORT}:${FRONTEND_SERVER_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - app-network
    depends_on:
      - backend
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - SESSION_SECRET=${SESSION_SECRET}
      - NODE_ENV=${NODE_ENV}
    networks:
      - app-network
    depends_on:
      - db
  db:
    image: postgres
    container_name: db
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
volumes:
  db-data:
networks:
  app-network:
    driver: bridge
